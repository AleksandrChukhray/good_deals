<?php    // https://developers.facebook.com/docs/graph-api/reference/user    header("Content-Type:text/html;charset=UTF-8");    session_start();        define('PATH_SITE_ROOT', $_SERVER['DOCUMENT_ROOT'].'/');        require_once "../../config.php";    require_once '../../connection.php';    require_once '../../core/global.php';    require_once PATH_SITE_ROOT . 'core/facebook-php-sdk-v4-5.0-dev/src/Facebook/autoload.php';    /*$SilentMode = false;    if ((isset($_SESSION['fb_login_silent'])) && ($_SESSION['fb_login_silent'] == '1')) {        $SilentMode = true;    }*/            $facebook = new Facebook\Facebook([        'app_id' => facebook_app_id,        'app_secret' => facebook_app_secret,        'default_graph_version' => facebook_graph_version        ]);    $helper = $facebook->getRedirectLoginHelper();    try {        $accessToken = $helper->getAccessToken();        if (!isset($accessToken)) {            /*if ($helper->getError()) {                header('HTTP/1.0 401 Unauthorized');                echo "Error: " . $helper->getError() . "\n";                echo "Error Code: " . $helper->getErrorCode() . "\n";                echo "Error Reason: " . $helper->getErrorReason() . "\n";                echo "Error Description: " . $helper->getErrorDescription() . "\n";            } else {                  header('HTTP/1.0 400 Bad Request');                  echo 'Bad request';            }            exit;*/            return AddAlertMessage('danger', 'Ошибка при регистрации! (1)', '/');        }                // Logged in        //echo '<h3>Access Token</h3>';        //var_dump($accessToken->getValue());        // The OAuth 2.0 client handler helps us manage access tokens        $oAuth2Client = $facebook->getOAuth2Client();                // Get the access token metadata from /debug_token        $tokenMetadata = $oAuth2Client->debugToken($accessToken);        /*echo '<h3>Metadata</h3>';        var_dump($tokenMetadata);*/        $vUniversalID = 'fb_'.$tokenMetadata->getField('user_id');        //echo 'UniversalID='.$vUniversalID;                // Validation (these will throw FacebookSDKException's when they fail)        $tokenMetadata->validateAppId(facebook_app_id);        // If you know the user ID this access token belongs to, you can validate it here        //$tokenMetadata->validateUserId('123');        $tokenMetadata->validateExpiration();                if (!$accessToken->isLongLived()) {          // Exchanges a short-lived access token for a long-lived one          try {            $accessToken = $oAuth2Client->getLongLivedAccessToken($accessToken);          } catch (Facebook\Exceptions\FacebookSDKException $e) {            /*echo "<p>Error getting long-lived access token: " . $helper->getMessage() . "</p>\n\n";            exit;*/            return AddAlertMessage('danger', 'Ошибка при регистрации! (2)', '/');          }          /*echo '<h3>Long-lived</h3>';          var_dump($accessToken->getValue());*/        }                $accessTokenStr = $accessToken->getValue();                // Поиск пользователя в бд, и если не существует, то создание нового        $sql = "select ID ".               "from Users ".               "where (UniversalID = '$vUniversalID');";        $rec = GetMainConnection()->query($sql)->fetch();        if (empty($rec['ID'])) {            try {                // Returns a Facebook\FacebookResponse object                $response = $facebook->get('/me?fields=id,first_name,last_name,email', $accessTokenStr);                                $user = $response->getGraphUser();                $userEmail = $user->getField('email');                if (empty($userEmail)) {                  return AddAlertMessage('danger', 'Ошибка при регистрации! (Эл. почта не указана).', '/');                }                $sql = "select ID from Users where (Email = '$userEmail');";                $checkuser = GetMainConnection()->query($sql)->fetch();                if (!empty($checkuser['ID'])) {                    return AddAlertMessage('danger', 'Пользователь с эл. почтой: "'.$userEmail.'" уже зарегистрирован на сайте.', '/');                }                                /*echo '<h3>User</h3>';                var_dump($user);*/                                $sql = "insert into Users(UniversalType, UniversalID, AccessToken, UserName, Email, EmailConfirmed, RememberMe) ".                       "values(2, '$vUniversalID', '$accessTokenStr', '$userEmail', '$userEmail', 1, 1) ".                       "on duplicate key update ".                       "UniversalID = '$vUniversalID';";                GetMainConnection()->exec($sql);                      $UserID = GetMainConnection()->lastInsertId();                $sql = "insert into UserData(UserID, FirstName, LastName) ".                       "values($UserID, '".$user->getField('first_name')."', '".$user->getField('last_name')."') ".                       "on duplicate key update ".                       "UserID = $UserID;";                GetMainConnection()->exec($sql);            } catch(Facebook\Exceptions\FacebookResponseException $e) {                /*echo 'Graph returned an error: ' . $e->getMessage();                exit;*/                return AddAlertMessage('danger', 'Ошибка при регистрации! (3)', '/');            } catch(Facebook\Exceptions\FacebookSDKException $e) {                /*echo 'Facebook SDK returned an error: ' . $e->getMessage();                exit;*/                return AddAlertMessage('danger', 'Ошибка при регистрации! (4)', '/');            }        }        // Если дошли без ошибок, то делаем попытку входа с использованием данных из нашей бд.        if (LoginUsingUniversalID($vUniversalID)) {            if (empty($_SESSION['login_redirect'])) {                return AddAlertMessage('success', 'Добро пожаловать!', '/');            } else {                $vRedirect = $_SESSION['login_redirect'];                unset($_SESSION['login_redirect']);                Redirect($vRedirect);            }                    } else {            return AddAlertMessage('danger', 'Ошибка при регистрации! (5)', '/');        }            } catch(Facebook\Exceptions\FacebookResponseException $e) {        // When Graph returns an error        //echo 'Graph returned an error: ' . $e->getMessage();        return AddAlertMessage('danger', 'Ошибка при регистрации! (6)', '/');    } catch(Facebook\Exceptions\FacebookSDKException $e) {        // When validation fails or other local issues        //echo 'Facebook SDK returned an error: ' . $e->getMessage();        return AddAlertMessage('danger', 'Ошибка при регистрации! (7)', '/');    }?>    